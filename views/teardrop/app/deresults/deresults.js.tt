'use strict';

angular.module('TearDrop.deresults', ['ngRoute', 'ui.bootstrap', 'ui.grid', 'ui.grid.pagination', 'ui.grid.selection'])

.config(['$routeProvider', function($routeProvider) {
  $routeProvider.when('/deresults/:run/:contrast', {
    templateUrl: '[% config.base_uri %]/app/deresults/deresults.html',
    controller: 'DeResultsCtrl'
  });
  $routeProvider.when('/deresults', {
    templateUrl: '[% config.base_uri %]/app/deresults/deresults.html',
    controller: 'DeResultsCtrl'
  });
}])

.controller('DeResultsCtrl', ['$rootScope', '$routeParams', '$scope', '$http', 'uiGridConstants', function($rootScope, $routeParams, $scope, $http, uiGridConstants) {

  if ($rootScope.deresults == null) {
    $rootScope.deresults={
      'selectedDeRun': null,
      'selectedContrast': null,
      'pagingOptions': {
        'page': 1,
        'pagesize': 20,
      },
      'sort': [
        { 'field': 'log2_foldchange', 'direction': 'desc' },
      ],
      'filters': {
        'adjp': 0.1
      },
    };
  }
  $scope.deRuns=[];
  $http.get('[% config.base_uri %]/api/deruns').success(function(data) {
    $scope.deRuns=data;
    if ($rootScope.deresults.selectedDeRun==null) {
      $rootScope.deresults.selectedDeRun=$scope.deRuns[0];
      $rootScope.deresults.selectedContrast=$scope.deRuns[0].contrasts[0];
    }
    if ($routeParams.run != null && $routeParams.contrast != null) {
      angular.forEach($scope.deRuns, function(r) {
        if (r.id==$routeParams.run) {
          $rootScope.deresults.selectedDeRun=r;
          angular.forEach(r.contrasts, function(c) {
            if (c.id==$routeParams.contrast) {
              $rootScope.deresults.selectedContrast=c;
              return;
            }
          });
          return;
        }
      });
    }
    $scope.$watch('deresults.selectedDeRun', function(newVal, oldVal) {
      if (newVal !== oldVal && newVal !== null && (oldVal == null || newVal.id !== oldVal.id)) {
        $rootScope.deresults.doRefresh(true);
      }
    }, true);
    $scope.$watch('deresults.selectedContrast', function(newVal, oldVal) {
      if (newVal !== oldVal && newVal !== null && (oldVal == null || newVal.id !== oldVal.id)) {
        $rootScope.deresults.doRefresh(true);
      }
    }, true);
    $rootScope.deresults.doRefresh(true);
  }).error($rootScope.errHandler);

  $scope.gridOptions = {
    minRowsToShow: 20,
    columnDefs: [
      { name: 'Transcript/Gene', field: 'transcript_id', width: '8%', cellTemplate: '<div class="ui-grid-cell-contents"><a href="#/genes/{{COL_FIELD}}">{{COL_FIELD CUSTOM_FILTERS}}</a></div>', },
      { name: 'Rating', field: 'transcript.rating', width: '10%', cellTemplate: '<div class="ui-grid-cell-contents"><rating ng-model="MODEL_COL_FIELD" max="10" readonly="true" state-off="\'none\'"></rating></div>', },
      { name: 'Description', field: 'transcript', width: '30%', cellTemplate: '<div class="ui-grid-cell-contents"><reviewed-description ng-model="MODEL_COL_FIELD"></reviewed-description></div>', },
      { name: 'Base Mean', field: 'base_mean', width: '12%' },
      { name: 'p-value', field: 'pvalue', width: '10%' },
      { name: 'Adjusted p-value', field: 'adjp', width: '10%' },
      { name: 'Log2 FC', field: 'log2_foldchange', width: '10%' },
      { name: 'Flagged', field: 'flagged', width: '10%' },
    ],
  };

  $scope.refresh = function(p) {
    if ($rootScope.deresults.selectedDeRun!==null && $rootScope.deresults.selectedContrast!==null) {
      $http.get('[% config.base_uri %]/api/deruns/'+$rootScope.deresults.selectedDeRun.id+'/contrasts/'+$rootScope.deresults.selectedContrast.id+'/results', { 'params': p }).success(
        function(res) {
          $rootScope.deresults.pagingOptions.total_items = res.total_items;
          $scope.gridOptions.data = res.data;
        }
      ).error($rootScope.errHandler);
    }
  }
}]);
